#
# Makefile for a Video Disk Recorder plugin
#
# $Id$

# The official name of this plugin.
# This name will be used in the '-P...' option of VDR to load the plugin.
# By default the main source file also carries this name.
#
PLUGIN = mlist

### Set this to '0' if you don't want mlist to auto-configure itself
AUTOCONFIG=1

### If AUTOCONFIG is not active,you can manually enable the
### optional modules or patches for other plugins:

ifeq ($(AUTOCONFIG),0)
	# If you want to use Perl compatible regular expressions (PCRE) or libtre for
	# unlimited fuzzy searching, uncomment this and set the value to pcre/pcre2
	# or tre; also have a look at INSTALL for further notes on this.
	#REGEXLIB = pcre2
endif

### The version number of this plugin (taken from the main source file):

VERSION = $(shell grep 'static const char \*VERSION *=' $(PLUGIN).c | awk '{ print $$6 }' | sed -e 's/[";]//g')

### The C++ compiler and options:

CXX      ?= g++
CXXFLAGS ?= -g -O2 -Wall -Woverloaded-virtual

### Make sure that necessary options are included:
ifeq ($(strip $(wildcard $(VDRDIR)/Make.global)),)
  CXXFLAGS += -fPIC
else
  include $(VDRDIR)/Make.global
endif

### The directory environment:

VDRDIR ?= ../../..
LIBDIR = $(VDRDIR)/PLUGINS/lib
TMPDIR = /tmp

### The module configuration:

ifeq ($(AUTOCONFIG),1)
	ifeq (exists, $(shell $(PKG_CONFIG) libpcre2-posix && echo exists))
		REGEXLIB = pcre2
	else ifeq (exists, $(shell $(PKG_CONFIG) libpcre && echo exists))
		REGEXLIB = pcre
	else ifeq (exists, $(shell $(PKG_CONFIG) tre && echo exists))
		REGEXLIB = tre
	endif
endif

### The PCRE settings:

ifeq ($(REGEXLIB), pcre2)
	LIBS += $(shell pcre2-config --libs-posix)
	INCLUDE += $(shell pcre2-config --cflags)
	DEFINES += -DHAVE_PCRE2POSIX
else ifeq ($(REGEXLIB), pcre)
	LIBS += $(shell pcre-config --libs-posix)
	INCLUDE += $(shell pcre-config --cflags)
	DEFINES += -DHAVE_PCREPOSIX
else ifeq ($(REGEXLIB), tre)
	LIBS += -L$(shell $(PKG_CONFIG) --variable=libdir tre) $(shell $(PKG_CONFIG) --libs tre)
	DEFINES += -DHAVE_LIBTRE
	INCLUDE += $(shell $(PKG_CONFIG) --cflags tre)
endif

### Allow user defined options to overwrite defaults:

-include $(VDRDIR)/Make.config

### Version number of VDR's plugin API (taken from VDR's "config.h"):
APIVERSION = $(shell sed -ne '/define APIVERSION/s/^.*"\(.*\)".*$$/\1/p' $(VDRDIR)/config.h)

### The name of the distribution archive:
	
ARCHIVE = $(PLUGIN)-$(VERSION)
PACKAGE = vdr-$(ARCHIVE)

### Includes and Defines (add further entries here):

INCLUDES += -I$(VDRDIR)/include

DEFINES += -D_GNU_SOURCE -DPLUGIN_NAME_I18N='"$(PLUGIN)"'

### The object files (add further files here):

OBJS = $(PLUGIN).o

### Targets:
all: libvdr-$(PLUGIN).so i18n
	@cp $< $(LIBDIR)/$<.$(APIVERSION)

%.o: %.c
	$(CXX) $(CXXFLAGS) -c $(DEFINES) $(INCLUDES) $<
	
libvdr-$(PLUGIN).so: $(OBJS)
	$(CXX) $(CXXFLAGS) -shared $(OBJS) -o $@

dist: clean
	@-rm -rf $(TMPDIR)/$(ARCHIVE)
	@mkdir $(TMPDIR)/$(ARCHIVE)
	@cp -a * $(TMPDIR)/$(ARCHIVE)
	@tar czf $(PACKAGE).tgz -C $(TMPDIR) $(ARCHIVE)
	@-rm -rf $(TMPDIR)/$(ARCHIVE)
	@echo Distribution package created as $(PACKAGE).tgz

clean:
	@-rm -f $(PODIR)/*.mo $(PODIR)/*.pot
	@-rm -f $(OBJS) $(DEPFILE) *.so *.tgz core* *~

### Internationalization (I18N):

PODIR     = po
LOCALEDIR = $(VDRDIR)/locale
I18Npo    = $(wildcard $(PODIR)/*.po)
I18Nmo    = $(addsuffix .mo, $(foreach file, $(I18Npo), $(basename $(file))))
I18Ndirs  = $(notdir $(foreach file, $(I18Npo), $(basename $(file))))
I18Npot   = $(PODIR)/$(PLUGIN).pot

%.mo: %.po
	msgfmt -c -o $@ $<

$(I18Npot): $(wildcard *.c)
	xgettext -C -cTRANSLATORS --no-wrap -F -k -ktr -ktrNOOP --msgid-bugs-address='<vdr@joachim-wilke.de>' -o $@ $(wildcard *.c)

$(I18Npo): $(I18Npot)
	msgmerge -U --no-wrap -F --backup=none -q $@ $<

i18n: $(I18Nmo)
	@mkdir -p $(LOCALEDIR)
	for i in $(I18Ndirs); do\
	    mkdir -p $(LOCALEDIR)/$$i/LC_MESSAGES;\
	    cp $(PODIR)/$$i.mo $(LOCALEDIR)/$$i/LC_MESSAGES/vdr-$(PLUGIN).mo;\
	    done

# Dependencies:

MAKEDEP = $(CXX) -MM -MG
DEPFILE = .dependencies
$(DEPFILE): Makefile
	@$(MAKEDEP) $(DEFINES) $(INCLUDES) $(OBJS:%.o=%.c) > $@

-include $(DEPFILE)
